{"path":"blog/code-literacy","slug":"code-literacy","title":"Code Literacy","date":"2019-07-25T00:00:00.000Z","excerpt":"Asking should designers code is asking the wrong question.","html":"<p>Ah yes, everyone's favorite question: <em>should designers code?</em>\nAs much as I'd love to pontificate on the matter,\nI think the framing of this question is fundamentally wrong.\nAt the heart of this conversation is the idea of <em>code literacy</em>,\nthat is, the level at which one can read, write, and understand software code in the form of programming languages.</p>\n<p>We don't question whether or not we should teach children to read and write,\nor whether we should math in school.\nIn a modern public education systems, these are a given.\nWhile these institutions might have other problems,\nI think code literacy should be a fundamental part of any school curriculum.</p>\n<p>What <em>is</em> code? Paul Ford has <a href=\"https://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/\">already written</a> more than enough to cover that topic,\nbut I'd like to step back and consider how code is not dissimilar to written language and mathematics.</p>\n<p>While spoken languages are innate, we humans invented written language somewhat recently in our own history.\nSpeaking comes naturally, but written language is not hard-wired into our brains.\nWe naturally think in symbols, and most of us are able to handle reading and writing,\nbut it's still something that we invented.\nIt's a powerful tool that allows us to transfer knowledge over space and time in ways we couldn't do without it.</p>\n<p>Math, too, is symbolic in nature.\nIt's not entirely dependent on written language,\nbut math certainly benefits from our ability to scribble lines on paper.</p>\n<p>Code is the languages we humans use to communicate with computers.</p>\n<p>Think about this for a second:</p>\n<!--\nWe created a tool that needs language to work.\n-->\n<p><em>The computer is the first tool that we've created that <strong>requires</strong> written language to even work.</em></p>\n<p>Without software, computers are useless.\nPerhaps, one day, computers might fluently speak natural human languages,\nbut there will always be code underlying the abstractions that enable this.</p>\n<p>Some people are interested in abstracting away the code required to program computers,\nwhich can make computers accessible in ways they weren't before.\nBut saying that code will become less and less fundamental to the progress of technology\nis akin to saying that no one needs to learn mathematics because we have calculators now.\nIf anything, the opposite is true.</p>\n<p>I suspect that the invention of software might be on par with the invention of mathematics,\nbut we're too close to the event to see its historical significance.\nMathematics is broad and broadly applicable and works at a much lower level than code -\nsoftware isn't really possible without mathematics, afterall.\nBut this is the first time in human history where we've created a technology that requires written language (i.e. software) to operate.</p>\n<p>Not everyone in a modern society needs to be a poet, or a bestselling author, or have a PhD in mathematics,\nbut I think having basic reading, writing, and arithmetic skills will benefit anyone.\nI think the same is true for code literacy.\nNot everyone needs to be a software developer,\nbut the more you know about how humans communicate with machines,\nthe more benefits you'll see professionally.</p>\n<p>Imagine you work in the finance industry and have figured out a way to mitigate all the billions of dollars lost on spreadsheet errors.\nOr imagine you're a farmer who leverages machine learning to predict crop yields.\nYou <em>could</em> wait for software developers to create this for you,\nbut diverse experiences applied to different technologies can result in incredible innovation.</p>\n<p>I don't think we should expect someone in a non-developer role to read and write code professionally.\nBut I also think the people who are curious and who learn a little more than their peers\nwill always have the advantage.</p>\n"}