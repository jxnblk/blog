{"path":"blog/modular-characters-part-two","slug":"modular-characters-part-two","title":"Modular Characters Part II","date":"2023-10-17T00:00:00.000Z","excerpt":"<p>After redesigning the NPC characters in Novantica to use modular parts and color schemes, I realized that the approach I had set up wouldn't for the game due to poor performance.</p>\n","html":"<p>After redesigning the NPC characters in Novantica to use modular parts and color schemes, I realized that the approach I had set up wouldn't for the game due to poor performance.</p>\n<!-- more -->\n<p><em>This is a two-part series. Read <a href=\"/posts/modular-characters-part-one\">Modular Characters Part I</a> here.</em></p>\n<!--\n- perf\n- other games - rendering crowds\n- GPUi thing\n- Mesh Animator\n  - magic\n  - special shader\n  - bakes animation frames into texture\n  - custom script to animate the texture\n  - trade off: memory consumption\n- exporting separate characters based on the modular parts\n  - less modular than before\n  - still using texture swap\n- first attempt\n  - baking idle, walking, sitting poses for each model\n  - 60 fps\n  - way too big\n  - instantiating a character would cause the game to pause on a frame\n- baking just idle and walking 30 FPS\n  - smooth instantiation\n- sitting NPCs\n  - tried mesh animator mesh mode, didn't work\n  - used the same idea, but baked static meshes for each pose\n    - loop each character\n    - loop each pose\n    - bake mesh\n  - standard URP shader\n  - custom script to randomize sitting pose\n- results\n  - before: 15-30 FPS on Steam Deck ~64 npcs\n  - after: 60 FPS on Steam Deck ~128 npcs\n\n-->\n","draft":true,"tags":["devlog","unity","blender","character design","mixamo"]}